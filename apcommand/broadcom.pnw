The Main Broadcom Module
=======================

This is the `main` module, it provides the entry-point for controlling the Broadcom AP when it is run at the command-line.

<<name='imports', echo=False>>=
# this package
from broadcom.argumentparser import Arguments
from log_setter import set_logger
@
<<name='enable_debugger', echo=False>>=
def enable_debugger(args):
    """
    Enables interactive debugger (pudb takes precedence over pdb)

    :param:

     - `args`: namespace with pudb and pdb attributes
    """
    if args.pudb:
        import pudb
        pudb.set_trace()
        return
    elif args.pdb:
        import pdb
        pdb.set_trace()
    return
@
<<name="main", echo=False>>=
def main():
    """
    Runs the command-line interface
    """    
    command_line = Arguments()
    args = command_line.arguments
    set_logger(args)
    if any((args.pudb, args.pdb)):
        enable_debugger(args)
    args.function(args)
    return
@
<<name='__main__', echo=False>>=
if __name__ == "__main__":
    main()
@

